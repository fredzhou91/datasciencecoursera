setwd('/Users/fred/Desktop/datasciencecoursera/R/Reproducible_Research/')
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,ncol=10)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,ncols=10)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,cols=10)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,nrows=10)
dim(data)
names(data)
data[1,]
data[1:4,]
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,nrows=-1)
dim(data)
unique(data$EVTYPE)
names(data)
Harmful_EVTYPE=aggregate(data[,23:24],by=list(data[,8]),na.rm=T)
Harmful_EVTYPE=aggregate(data[,23:24],by=list(data[,8]),function(x) mean(x,na.rm=T))
dim(Harmful_EVTYPE)
names(Harmful_EVTYPE)
FATALITITES_EVTYPE=Harmful_EVTYPE[order(Harmful_EVTYPE$FATALITIES),]
FATALITITES_EVTYPE[1:10,]
FATALITITES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$FATALITIES),]
FATALITITES_EVTYPE[1:10,]
FATALITITES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$FATALITIES),][1:5,]
INJURIES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$INJURIES),][1:5,]
FATALITITES_EVTYPE
INJURIES_EVTYPE
FATALITITES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$FATALITIES),][1:5,]
FATALITITES_EVTYPE$Class=rep('FATALITITES',5)
INJURIES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$INJURIES),][1:5,]
INJURIES_EVTYPE$Class=rep('INJURIES',5)
Merge=rbind(FATALITITES_EVTYPE,INJURIES_EVTYPE)
names(Merge)[1]='EVTYPE'
library(ggplot2)
Merge
Harmful_EVTYPE=aggregate(data[,23:24],by=list(data[,8]),function(x) sum(x,na.rm=T))
FATALITITES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$FATALITIES),][1:5,]
FATALITITES_EVTYPE$Class=rep('FATALITITES',5)
INJURIES_EVTYPE=Harmful_EVTYPE[order(-Harmful_EVTYPE$INJURIES),][1:5,]
INJURIES_EVTYPE$Class=rep('INJURIES',5)
Merge=rbind(FATALITITES_EVTYPE,INJURIES_EVTYPE)
names(Merge)[1]='EVTYPE'
Merge
qplot(EVTYPE~FATALITITES*INJURIES | Class,data=Merge)
qplot(EVTYPE~FATALITITES+INJURIES | Class,data=Merge)
qplot(EVTYPE~FATALITITES,data=Merge)
qplot(EVTYPE ~ FATALITITES,data=Merge)
qplot(EVTYPE , FATALITITES,data=Merge)
qplot(Merge$EVTYPE , Merge$FATALITITES,data=Merge)
qplot(Merge$EVTYPE , y=Merge$FATALITITES,data=Merge)
qplot(EVTYPE , FATALITITES,data=Merge,geom=c("boxplot", "jitter"),
fill=gear, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(EVTYPE , FATALITITES,data=Merge,geom=c("boxplot", "jitter"),
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
names(Merge)
qplot(EVTYPE,FATALITITES,data=Merge,geom=c("boxplot", "jitter"),
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(EVTYPE,FATALITIES,data=Merge,geom=c("boxplot", "jitter"),
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(INJURIES,FATALITIES,data=Merge,facets=EVTYPE~Class,
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon")
Merge
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
fill=EVTYPE, main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
fill=rep(c(1:5),2), main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
fill=rep(c(5:1)),col=rep(c(1:5)), main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
fill=rep(c(5:1),2),col=rep(c(1:5),2), main="Mileage by Gear Number",
xlab="", ylab="Miles per Gallon",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
col=rep(c(1:5),2), main="Top 5 Event ",
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
colors=rep(c(1:5),2), main="Top 5 Event ",col
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
colors=rep(c(1:5),2), main="Top 5 Event ",
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
colors(rep(c(1:5),2)), main="Top 5 Event ",
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2), main="Top 5 Event ",
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2), main="Top 5 Event ",size=I(3),
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2),shape=rep(c(1:5),2), main="Top 5 Event ",size=I(3),
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
color=rep(c(1:5),2), main="Top 5 Event ",size=I(3),
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2), main="Top 5 Event ",size=I(3),
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2), main="Top 5 Event ",size=I(3),shape=EVTYPE,
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
color=rep(c(1:5),2), main="Top 5 Event ",size=I(3),shape=Class,
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
qplot(INJURIES,FATALITIES,data=Merge,facets=Class~EVTYPE,
, main="Top 5 Event ",size=I(3),shape=Class,
xlab="", ylab="Sum of number of affected people",ylim=c(100,10000))
names(data)
data[1:10,]
unqiue(data$PROPDMGEXP)
unique(data$PROPDMGEXP)
unique(data$CROPPDMGEXP)
unique(data$CROPDMGEXP)
names(data)
unique(data$PROPDMGEXP)
length(data$PROPDMGEXP[grepl([0-9],data$PROPDMGEXP)])
length(data$PROPDMGEXP[grepl([0-9],data$PROPDMGEXP)])
length(data$PROPDMGEXP[grepl([0-9],data$PROPDMGEXP)]))
length(grepl([0-9],data$PROPDMGEXP))
length(grepl("[0-9]",data$PROPDMGEXP))
sum(grepl("[0-9]",data$PROPDMGEXP))
data$PROPDMGEXP[grepl("[0-9]"",data$PROPDMGEXP)]=10^data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)]
data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)]=10^data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)]
unique(data$PROPDMGEXP)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,nrows=-1)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=T,header=T,nrows=-1,stringsAsFactors=F)
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=F,header=T,nrows=-1)
data$PROPDMGEXP_new[grepl("[0-9]",data$PROPDMGEXP)]=10^data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)]
data$PROPDMGEXP[1:10]
sum(grepl("[0-9]",data$PROPDMGE))
sum(grepl("[0-9]",data$PROPDMGEXP))
data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)]
data$PROPDMGEXP_new[grepl("[0-9]",data$PROPDMGEXP)]=10^as.numeric(data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)])
dim(data)
grepl('-|?',data$PROPDMGEXP)
sum(grepl('-|?',data$PROPDMGEXP))
sum(grepl('-|\?',data$PROPDMGEXP))
sum(is.na(data$PROPDMGEXP) | data$PROPDMGEXP=='-' |data$PROPDMGEXP =='?')
data$PROPDMGEXP[is.na(data$PROPDMGEXP) | data$PROPDMGEXP=='-' |data$PROPDMGEXP =='?']=0
data$PROPDMGEXP[is.na(data$PROPDMGEXP) | data$PROPDMGEXP=='-' |data$PROPDMGEXP =='?']
data=read.table('/Users/fred/Downloads/repdata-data-StormData.csv',sep=',',stringsAsFactors=F,header=T,nrows=-1)
unique(data$PROPDMGEXP)
sort(unique(data$PROPDMGEXP))
data$PROPDMGEXP_new[grepl("[0-9]",data$PROPDMGEXP)]=10^as.numeric(data$PROPDMGEXP[grepl("[0-9]",data$PROPDMGEXP)])
data$PROPDMGEXP_new[is.na(data$PROPDMGEXP) | data$PROPDMGEXP=='-' |data$PROPDMGEXP =='?']=0
data$PROPDMGEXP_new[grepl('-|?',data$PROPDMGEXP)]=0
data$PROPDMGEXP_new[data$PROPDMGEXP=='B' |data$PROPDMGEXP=='b']=10^9
data$PROPDMGEXP_new[data$PROPDMGEXP=='H' |data$PROPDMGEXP=='h']=10^2
data$PROPDMGEXP_new[data$PROPDMGEXP=='K' |data$PROPDMGEXP=='k']=10^3
data$PROPDMGEXP_new[data$PROPDMGEXP=='M' |data$PROPDMGEXP=='m']=10^6
data$PROPDMGEXP_new[data$PROPDMGEXP=='H' |data$PROPDMGEXP=='h']=10^2
unique(data$PROPDMGEXP_new)
unique(data$CROPDMGEXP)
data$CROPDMGEXP_new[grepl("[0-9]",data$CROPDMGEXP)]=10^as.numeric(data$CROPDMGEXP[grepl("[0-9]",data$CROPDMGEXP)])
data$CROPDMGEXP_new[is.na(data$CROPDMGEXP) | data$CROPDMGEXP=='-' |data$CROPDMGEXP =='?']=0
data$CROPDMGEXP_new[grepl('-|?',data$CROPDMGEXP)]=0
data$CROPDMGEXP_new[data$CROPDMGEXP=='B' |data$CROPDMGEXP=='b']=10^9
data$CROPDMGEXP_new[data$CROPDMGEXP=='H' |data$CROPDMGEXP=='h']=10^2
data$CROPDMGEXP_new[data$CROPDMGEXP=='K' |data$CROPDMGEXP=='k']=10^3
data$CROPDMGEXP_new[data$CROPDMGEXP=='M' |data$CROPDMGEXP=='m']=10^6
data$PROP_total=data$PROPDMG*data$PROPDMGEXP_new
data$CROP_total=data$CROPDMG*data$CROPDMGEXP_new
data$Money_total=data$PROP_total+data$CROP_total
names(data)
data$PROP_total=data$PROPDMG*data$PROPDMGEXP_new
data$CROP_total=data$CROPDMG*data$CROPDMGEXP_new
data$Money_total=data$PROP_total+data$CROP_total
Money_EVTYPE=aggregate(data$Money_total,by=list(data$EVTYPE),function(x) sum(x,na.rm=T))
names(Money_EVTYPE)=c('EVTYPE',Money_total)
Money_EVTYPE=Money_EVTYPE[order(-Money_EVTYPE$Money_total)]
names(Money_EVTYPE)=c('EVTYPE','Money_total')
Money_EVTYPE=Money_EVTYPE[order(-Money_EVTYPE$Money_total)]
Money_EVTYPE=Money_EVTYPE[order(-Money_EVTYPE$Money_total),]
Money_EVTYPE[1:5,]
Money_EVTYPE[,2]=Money_EVTYPE[,2]/10^9
names(Money_EVTYPE)=c('EVTYPE','Money_total (Billions)')
Money_EVTYPE[1:5,]
Money_EVTYPE=aggregate(data$Money_total,by=list(data$EVTYPE),function(x) sum(x,na.rm=T))
Money_EVTYPE[,2]=round(Money_EVTYPE[,2]/10^9,digits = 2)
names(Money_EVTYPE)=c('EVTYPE','Money_total (Billions)')
Money_EVTYPE=Money_EVTYPE[order(-Money_EVTYPE$Money_total),]
Money_EVTYPE[1:5,]
rownames(Money_EVTYPE)=''
